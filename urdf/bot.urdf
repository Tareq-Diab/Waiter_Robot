<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from bot.urdf.xacro                 | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="bot">
  <!-- camera -->
  <gazebo reference="camera_link_R">
    <sensor name="camera_R" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>720</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bot/camera_R</cameraName>
        <imageTopicName>image_raw_R</imageTopicName>
        <cameraInfoTopicName>camera_R_info</cameraInfoTopicName>
        <frameName>camera_link_R</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="camera_link_L">
    <sensor name="camera_L" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>720</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                    That pixel's noise value is added to each of its color
                    channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bot/camera_L</cameraName>
        <imageTopicName>image_raw_L</imageTopicName>
        <cameraInfoTopicName>camera_L_info</cameraInfoTopicName>
        <frameName>camera_link_L</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <!-- Plugin update rate in Hz -->
      <updateRate>10</updateRate>
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>left_wheel_hinge</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>right_wheel_hinge</rightJoint>
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>0.4</wheelSeparation>
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>0.1</wheelDiameter>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>10</wheelTorque>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>chassis</robotBaseFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>1</odometrySource>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
    </plugin>
  </gazebo>
  <gazebo reference="chassis">
    <material>
                Gazebo/White
            </material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>
                Gazebo/Blue
            </material>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>
                Gazebo/Blue
            </material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>
                Gazebo/Gray
            </material>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor name="head_hokuyo_sensor" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <link name="chassis">
    <pose>0 0 0 0 0 0</pose>
    <inertial>
      <mass value="1"/>
      <origin rpy=" 0 0 0" xyz="0.0 0 0.0"/>
      <inertia ixx="0.00416" ixy="0" ixz="0" iyy="0.01416" iyz="0" izz="0.0166"/>
    </inertial>
    <collision name="collision">
      <origin rpy=" 0 0 0" xyz="0.0 0 0.0"/>
      <geometry>
        <box size=".4 .5 .05"/>
      </geometry>
    </collision>
    <!--
    <visual name='chassis_visual'>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size=".4 .5 .6"/>
      </geometry>
    </visual>-->
    <visual name="chassis_visual">
      <origin rpy="1.57 0 1.57" xyz="-0.205 -0.358 0"/>
      <geometry>
        <mesh filename="package://waiter_bot/meshes/marses_robot.stl" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>
  <link name="custer_wheel">
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>
    <visual name="">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="custer_joint" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="-0.1 0.0 0"/>
    <parent link="chassis"/>
    <child link="custer_wheel"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit effort="0.0" lower="0.0" upper="0.0" velocity="0.0"/>
  </joint>
  <link name="custer_wheel2">
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <mass value="0.1"/>
      <inertia ixx="0.002" ixy="0.0" ixz="0.0" iyy="0.002" iyz="0.0" izz="0.002"/>
    </inertial>
    <visual name="">
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="">
        <color rgba="1.0 0.0 0.0 1.0"/>
        <texture filename=""/>
      </material>
    </visual>
    <collision>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <joint name="custer_joint2" type="fixed">
    <origin rpy="0.0 0.0 0.0" xyz="0.1 0.0 0"/>
    <parent link="chassis"/>
    <child link="custer_wheel2"/>
    <axis xyz="0.0 0.0 0.0"/>
    <limit effort="0.0" lower="0.0" upper="0.0" velocity="0.0"/>
  </joint>
  <link name="left_wheel">
    <!--origin xyz="0.1 0.13 0.1" rpy="0 1.5707 1.5707"/-->
    <collision name="collision">
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
    </collision>
    <visual name="left_wheel_visual">
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <inertial>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.005" ixy="0" ixz="0" iyy="0.0025" iyz="0" izz="0.0025"/>
    </inertial>
  </link>
  <link name="right_wheel">
    <!--origin xyz="0.1 -0.13 0.1" rpy="0 1.5707 1.5707"/-->
    <collision name="collision">
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>200</mu>
            <mu2>200</mu2>
            <slip1>0</slip1>
            <slip2>0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <visual name="right_wheel_visual">
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.05"/>
      </geometry>
      <material name="yellow"/>
    </visual>
    <inertial>
      <origin rpy="0 1.5707 1.5707" xyz="0 0 0"/>
      <mass value="1"/>
      <inertia ixx="0.005" ixy="0" ixz="0" iyy="0.0025" iyz="0" izz="0.0025"/>
    </inertial>
  </link>
  <joint name="left_wheel_hinge" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.2 0"/>
    <!--origin xyz="0.1 0.13 0" rpy="0 1.5707 1.5707"/-->
    <child link="left_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!-- <limit effort="10000" velocity="1000"/> -->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <joint name="right_wheel_hinge" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.2 0"/>
    <!--origin xyz="0.1 -0.13 0" rpy="0 1.5707 1.5707"/-->
    <child link="right_wheel"/>
    <parent link="chassis"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <!-- <limit effort="10000" velocity="1000"/> -->
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>
  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://waiter_bot/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0"/>
    <origin rpy="0 0 0" xyz="0.2 0 0.35"/>
    <parent link="chassis"/>
    <child link="hokuyo_link"/>
  </joint>
</robot>

